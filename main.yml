#
# podman is group of target hosts, in this example podman01 and podman02
---
- hosts: podman
  vars:
    minimal_centos_version: "8"
    tz: Europe/Amsterdam
    pv: sdb
    vg: vg01
    lv: data
    mp: "/container-data"  # MountPoint
  roles:
    - role: role_nrpe
      when: containers is defined or pods is defined
    - role: role_nrpe_check_podman
      when: containers is defined or pods is defined
    - role: role_postfix

  # First (pre) configure the hosts
  # After that use roles to add special features
  pre_tasks:

    - name: Ensure target OS is supported
      fail:
        msg: "Playbook only suitable/tested for CentOS {{ minimal_centos_version }} or higher"
      when: ansible_distribution != 'CentOS' or ansible_distribution_major_version < minimal_centos_version

    #
    # podman itself
    #

    - name: ensure podman is installed
      yum:
        name: podman

    - name: ensure version is detected
      shell: podman --version
      register: podman_version
      changed_when: false
      check_mode: false

    - name: ensure podman version is shown
      debug:
        msg: "{{ podman_version.stdout.split('\n') }}"

    - name: ensure user podman is installed
      user:
        name: podman

    #
    # podman-compose
    #

    - name: ensure compose deps are installed
      yum:
        name: podman-compose

    - name: ensure podman-compose version is detected
      shell: /bin/podman-compose version
      register: podmancompose_version
      changed_when: false
      check_mode: false

    - name: ensure podman-compose version is shown
      debug:
        msg: "{{ podmancompose_version.stdout.split('\n') }}"

    #
    # continue
    #

    - name: ensure .ssh dir exists
      file:
        path: /home/podman/.ssh
        state: directory
        mode: 0700
        owner: podman
        group: podman

    - name: ensure ssh key pair exists
      become: true
      become_user: podman
      openssh_keypair:
        path: "~/.ssh/id_rsa"
        owner: podman
        group: podman

    - name: ensure dirs exist, go group stuff together
      become: true
      become_user: podman
      file:
        path: /home/podman/{{ item }}
        state: directory
        mode: 0755
      loop:
        - podman
        - podman_compose

    - name: ensure sudo is installed
      package:
        name: sudo

    - name: ensure user podman can have elevated privileges
      copy:
        src: "{{ item }}"
        dest: /etc/sudoers.d/
        mode: '0440'
        validate: visudo -cf %s
      loop:
        - 10_podman

    # Create storage for persistent container data
    - name: ensure VG exists
      lvg:
        pvs: /dev/{{ pv }}
        vg: "{{ vg }}"

    - name: ensure LV exists
      lvol:
        vg: "{{ vg }}"
        lv: data
        size: 40G
        pvs: /dev/{{ pv }}

    - name: ensure FS exists
      filesystem:
        fstype: xfs
        dev: /dev/mapper/{{ vg }}-{{ lv }}

    - name: ensur MP (mountpoint) exists
      file:
        path: "{{ mp }}"
        state: directory
        mode: 0755

    - name: mount
      mount:
        path: "{{ mp }}"
        src: /dev/mapper/{{ vg }}-{{ lv }}
        fstype: xfs
        state: mounted

    #
    # git
    #

    - name: ensure git is installed
      yum:
        name: git

    - name: relabel needed for this (vagrant) box and timezone
      command: restorecon -v /etc/localtime
      register: command
      changed_when: '"Relabeled" in command.stdout'

    - name: TZ {{ tz }}
      timezone:
        name: "{{ tz }}"

    #
    # helpers
    #

    - name: ensure yamllint is installed
      yum:
        name: "{{ item }}"
      loop:
        - yamllint

    # sources on git clone https://github.com/fboender/multi-git-status.git
    # I patched this version to support old git and locks
    - name: ensure mgitstatus is installed
      copy:
        src: mgitstatus
        dest: /usr/local/bin/
        mode: 0755

    - name: ensure mgitstatus manpage is installed
      copy:
        src: mgitstatus.1.gz
        dest: /usr/share/man/man1/
        mode: 0644

...
